{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { url } from \"./jsonServer\";\nexport var login = function login(mail, pass) {\n  var response, json;\n  return _regeneratorRuntime.async(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url + '/login', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              email: mail,\n              password: pass\n            })\n          }));\n\n        case 3:\n          response = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 6:\n          json = _context.sent;\n          return _context.abrupt(\"return\", json.token);\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          return _context.abrupt(\"return\", null);\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 10]], Promise);\n};\nexport var signup = function signup(mail, pass, userName) {\n  var response, json;\n  return _regeneratorRuntime.async(function signup$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url + '/signup', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              email: mail,\n              password: pass,\n              name: userName\n            })\n          }));\n\n        case 3:\n          response = _context2.sent;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 6:\n          json = _context2.sent;\n          return _context2.abrupt(\"return\", json.token);\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n          return _context2.abrupt(\"return\", null);\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 10]], Promise);\n};\nexport var getUserInfo = function getUserInfo(token) {\n  var response, json;\n  return _regeneratorRuntime.async(function getUserInfo$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url + '/myinfo', {\n            method: 'GET',\n            headers: {\n              Authorization: 'Bearer ' + token\n            }\n          }));\n\n        case 3:\n          response = _context3.sent;\n          _context3.next = 6;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 6:\n          json = _context3.sent;\n          return _context3.abrupt(\"return\", json.user);\n\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n          return _context3.abrupt(\"return\", null);\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 10]], Promise);\n};\nexport var updateUserInfo = function updateUserInfo(token, newUser) {\n  var response, json;\n  return _regeneratorRuntime.async(function updateUserInfo$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url + '/user/update', {\n            method: 'GET',\n            headers: {\n              Authorization: 'Bearer ' + token\n            },\n            body: JSON.stringify(newUser)\n          }));\n\n        case 3:\n          response = _context4.sent;\n          _context4.next = 6;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 6:\n          json = _context4.sent;\n          return _context4.abrupt(\"return\", json.user);\n\n        case 10:\n          _context4.prev = 10;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n          return _context4.abrupt(\"return\", null);\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 10]], Promise);\n};","map":{"version":3,"sources":["C:/Users/adlai/Desktop/IngProc/CimaHealth/services/userFetchs.js"],"names":["url","login","mail","pass","fetch","method","headers","body","JSON","stringify","email","password","response","json","token","console","log","signup","userName","name","getUserInfo","Authorization","user","updateUserInfo","newUser"],"mappings":"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","sourcesContent":["import {url} from './jsonServer';\r\n//User manager\r\nexport const login = async (mail, pass) => {\r\n\ttry {\r\n\t  let response = await fetch(url + '/login', {\r\n\t\t method: 'POST',\r\n\t\t headers: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t },\r\n\t\t body: JSON.stringify({\r\n\t\t\temail: mail,\r\n\t\t\tpassword: pass,\r\n\t\t }),\r\n\t  });\r\n\t  let json = await response.json();\r\n\t  return json.token;\r\n\t} catch (error) {\r\n\t  console.log(error);\r\n\t  return null;\r\n\t}\r\n };\r\n export const signup = async (mail, pass, userName) => {\r\n\ttry {\r\n\t  let response = await fetch(url + '/signup', {\r\n\t\t method: 'POST',\r\n\t\t headers: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t },\r\n\t\t body: JSON.stringify({\r\n\t\t\temail: mail,\r\n\t\t\tpassword: pass,\r\n\t\t\tname: userName\r\n\t\t }),\r\n\t  });\r\n\t  let json = await response.json();\r\n\t  return json.token;\r\n\t} catch (error) {\r\n\t  console.log(error);\r\n\t  return null;\r\n\t}\r\n };\r\n export const getUserInfo = async (token) => {\r\n\ttry {\r\n\t  let response = await fetch(url + '/myinfo', {\r\n\t\t method: 'GET',\r\n\t\t headers: {\r\n\t\t\tAuthorization: 'Bearer ' + token,\r\n\t\t },\r\n\t  });\r\n\t  let json = await response.json();\r\n\t  return json.user;\r\n\t} catch (error) {\r\n\t  console.log(error);\r\n\t  return null;\r\n\t}\r\n };\r\n export const updateUserInfo = async (token, newUser) => {\r\n\ttry {\r\n\t  let response = await fetch(url + '/user/update', {\r\n\t\t method: 'GET',\r\n\t\t headers: {\r\n\t\t\tAuthorization: 'Bearer ' + token,\r\n\t\t },\r\n\t\t body: JSON.stringify(\r\n\t\t\tnewUser\r\n\t\t )\r\n\t  });\r\n\t  let json = await response.json();\r\n\t  return json.user;\r\n\t} catch (error) {\r\n\t  console.log(error);\r\n\t  return null;\r\n\t}\r\n };"]},"metadata":{},"sourceType":"module"}