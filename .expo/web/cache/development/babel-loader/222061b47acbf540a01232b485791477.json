{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport XDate from 'xdate';\nvar offset = 100;\n\nfunction buildEvent(column, left, width, dayStart) {\n  var startTime = new XDate(column.start);\n  var endTime = column.end ? new XDate(column.end) : new XDate(startTime).addHours(1);\n  var dayStartTime = new XDate(startTime).clearTime();\n  column.top = (dayStartTime.diffHours(startTime) - dayStart) * offset;\n  column.height = startTime.diffHours(endTime) * offset;\n  column.width = width;\n  column.left = left;\n  return column;\n}\n\nfunction collision(a, b) {\n  return a.end > b.start && a.start < b.end;\n}\n\nfunction expand(ev, column, columns) {\n  var colSpan = 1;\n\n  for (var i = column + 1; i < columns.length; i++) {\n    var col = columns[i];\n\n    for (var j = 0; j < col.length; j++) {\n      var ev1 = col[j];\n\n      if (collision(ev, ev1)) {\n        return colSpan;\n      }\n    }\n\n    colSpan++;\n  }\n\n  return colSpan;\n}\n\nfunction pack(columns, width, calculatedEvents, dayStart) {\n  var colLength = columns.length;\n\n  for (var i = 0; i < colLength; i++) {\n    var col = columns[i];\n\n    for (var j = 0; j < col.length; j++) {\n      var colSpan = expand(col[j], i, columns);\n      var L = i / colLength * width;\n      var W = width * colSpan / colLength - 10;\n      calculatedEvents.push(buildEvent(col[j], L, W, dayStart));\n    }\n  }\n}\n\nfunction populateEvents(events, screenWidth, dayStart) {\n  var lastEnd;\n  var columns;\n  var calculatedEvents = [];\n  events = events.map(function (ev, index) {\n    return _objectSpread(_objectSpread({}, ev), {}, {\n      index: index\n    });\n  }).sort(function (a, b) {\n    if (a.start < b.start) return -1;\n    if (a.start > b.start) return 1;\n    if (a.end < b.end) return -1;\n    if (a.end > b.end) return 1;\n    return 0;\n  });\n  columns = [];\n  lastEnd = null;\n  events.forEach(function (ev) {\n    if (lastEnd !== null && ev.start >= lastEnd) {\n      pack(columns, screenWidth, calculatedEvents, dayStart);\n      columns = [];\n      lastEnd = null;\n    }\n\n    var placed = false;\n\n    for (var i = 0; i < columns.length; i++) {\n      var col = columns[i];\n\n      if (!collision(col[col.length - 1], ev)) {\n        col.push(ev);\n        placed = true;\n        break;\n      }\n    }\n\n    if (!placed) {\n      columns.push([ev]);\n    }\n\n    if (lastEnd === null || ev.end > lastEnd) {\n      lastEnd = ev.end;\n    }\n  });\n\n  if (columns.length > 0) {\n    pack(columns, screenWidth, calculatedEvents, dayStart);\n  }\n\n  return calculatedEvents;\n}\n\nexport default populateEvents;","map":{"version":3,"sources":["C:/Users/adlai/Desktop/IngProc/CimaHealth/node_modules/react-native-calendars/src/timeline/Packer.js"],"names":["XDate","offset","buildEvent","column","left","width","dayStart","startTime","start","endTime","end","addHours","dayStartTime","clearTime","top","diffHours","height","collision","a","b","expand","ev","columns","colSpan","i","length","col","j","ev1","pack","calculatedEvents","colLength","L","W","push","populateEvents","events","screenWidth","lastEnd","map","index","sort","forEach","placed"],"mappings":"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","sourcesContent":["// @flow\nimport XDate from 'xdate';\nconst offset = 100;\nfunction buildEvent(column, left, width, dayStart) {\n    const startTime = new XDate(column.start);\n    const endTime = column.end ? new XDate(column.end) : new XDate(startTime).addHours(1);\n    const dayStartTime = new XDate(startTime).clearTime();\n    column.top = (dayStartTime.diffHours(startTime) - dayStart) * offset;\n    column.height = startTime.diffHours(endTime) * offset;\n    column.width = width;\n    column.left = left;\n    return column;\n}\nfunction collision(a, b) {\n    return a.end > b.start && a.start < b.end;\n}\nfunction expand(ev, column, columns) {\n    let colSpan = 1;\n    for (let i = column + 1; i < columns.length; i++) {\n        let col = columns[i];\n        for (let j = 0; j < col.length; j++) {\n            let ev1 = col[j];\n            if (collision(ev, ev1)) {\n                return colSpan;\n            }\n        }\n        colSpan++;\n    }\n    return colSpan;\n}\nfunction pack(columns, width, calculatedEvents, dayStart) {\n    let colLength = columns.length;\n    for (let i = 0; i < colLength; i++) {\n        let col = columns[i];\n        for (let j = 0; j < col.length; j++) {\n            const colSpan = expand(col[j], i, columns);\n            const L = (i / colLength) * width;\n            const W = (width * colSpan) / colLength - 10;\n            calculatedEvents.push(buildEvent(col[j], L, W, dayStart));\n        }\n    }\n}\nfunction populateEvents(events, screenWidth, dayStart) {\n    let lastEnd;\n    let columns;\n    let calculatedEvents = [];\n    events = events\n        .map((ev, index) => ({ ...ev, index: index }))\n        .sort(function (a, b) {\n        if (a.start < b.start)\n            return -1;\n        if (a.start > b.start)\n            return 1;\n        if (a.end < b.end)\n            return -1;\n        if (a.end > b.end)\n            return 1;\n        return 0;\n    });\n    columns = [];\n    lastEnd = null;\n    events.forEach(function (ev) {\n        if (lastEnd !== null && ev.start >= lastEnd) {\n            pack(columns, screenWidth, calculatedEvents, dayStart);\n            columns = [];\n            lastEnd = null;\n        }\n        let placed = false;\n        for (let i = 0; i < columns.length; i++) {\n            let col = columns[i];\n            if (!collision(col[col.length - 1], ev)) {\n                col.push(ev);\n                placed = true;\n                break;\n            }\n        }\n        if (!placed) {\n            columns.push([ev]);\n        }\n        if (lastEnd === null || ev.end > lastEnd) {\n            lastEnd = ev.end;\n        }\n    });\n    if (columns.length > 0) {\n        pack(columns, screenWidth, calculatedEvents, dayStart);\n    }\n    return calculatedEvents;\n}\nexport default populateEvents;\n"]},"metadata":{},"sourceType":"module"}