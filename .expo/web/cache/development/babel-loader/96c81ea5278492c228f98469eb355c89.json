{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\adlai\\\\Desktop\\\\IngProc\\\\CimaHealth\\\\node_modules\\\\react-native-calendars\\\\src\\\\expandableCalendar\\\\WeekCalendar\\\\index.js\";\nvar _excluded = [\"style\", \"onDayPress\", \"markedDates\", \"firstDay\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport memoize from 'memoize-one';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport { Map } from 'immutable';\nimport React, { Component } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { extractComponentProps } from \"../../component-updater\";\nimport { weekDayNames } from \"../../dateutils\";\nimport { toMarkingFormat } from \"../../interface\";\nimport styleConstructor from \"../style\";\nimport asCalendarConsumer from \"../asCalendarConsumer\";\nimport CalendarList from \"../../calendar-list\";\nimport Week from \"../week\";\nimport Presenter from \"./presenter\";\n\nvar commons = require(\"../commons\");\n\nvar NUMBER_OF_PAGES = 2;\nvar applyAndroidRtlFix = commons.isAndroid && commons.isRTL;\n\nvar WeekCalendar = function (_Component) {\n  _inherits(WeekCalendar, _Component);\n\n  var _super = _createSuper(WeekCalendar);\n\n  function WeekCalendar() {\n    var _this;\n\n    _classCallCheck(this, WeekCalendar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.style = styleConstructor(_this.props.theme);\n    _this.presenter = new Presenter();\n    _this.page = NUMBER_OF_PAGES;\n    _this.firstAndroidRTLScrollIgnored = !applyAndroidRtlFix;\n    _this.state = {\n      items: _this.presenter.getDatesArray(_this.props)\n    };\n    _this.getWeekStyle = memoize(function (width, style) {\n      return [{\n        width: width\n      }, style];\n    });\n\n    _this.onDayPress = function (value) {\n      _this.presenter.onDayPress(_this.props.context, value);\n    };\n\n    _this.onScroll = function (event) {\n      var x = event.nativeEvent.contentOffset.x;\n      var onScroll = _this.presenter.onScroll;\n      var context = _this.props.context;\n      var items = _this.state.items;\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          containerWidth = _assertThisInitialize.containerWidth,\n          page = _assertThisInitialize.page;\n\n      var updateState = function updateState(newData, newPage) {\n        _this.page = newPage;\n\n        _this.setState({\n          items: _toConsumableArray(newData)\n        });\n      };\n\n      onScroll({\n        context: context,\n        updateState: updateState,\n        x: x,\n        page: page,\n        items: items,\n        width: containerWidth\n      });\n    };\n\n    _this.onMomentumScrollEnd = function () {\n      var items = _this.state.items;\n      var onMomentumScrollEnd = _this.presenter.onMomentumScrollEnd;\n\n      var updateItems = function updateItems(items) {\n        setTimeout(function () {\n          _this.setState({\n            items: _toConsumableArray(items)\n          });\n        }, 100);\n      };\n\n      onMomentumScrollEnd({\n        items: items,\n        props: _this.props,\n        page: _this.page,\n        updateItems: updateItems\n      });\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item;\n\n      var _extractComponentProp = extractComponentProps(Week, _this.props),\n          style = _extractComponentProp.style,\n          onDayPress = _extractComponentProp.onDayPress,\n          markedDates = _extractComponentProp.markedDates,\n          firstDay = _extractComponentProp.firstDay,\n          others = _objectWithoutProperties(_extractComponentProp, _excluded);\n\n      var context = _this.props.context;\n\n      var isSameWeek = _this.presenter.isSameWeek(item, context.date, firstDay);\n\n      var currentContext = isSameWeek ? context : undefined;\n      return React.createElement(Week, _extends({}, others, {\n        key: item,\n        current: item,\n        firstDay: firstDay,\n        style: _this.getWeekStyle(_this.containerWidth, style),\n        markedDates: markedDates,\n        onDayPress: onDayPress || _this.onDayPress,\n        context: currentContext,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }));\n    };\n\n    _this.getItemLayout = function (_, index) {\n      return {\n        length: _this.containerWidth,\n        offset: _this.containerWidth * index,\n        index: index\n      };\n    };\n\n    _this.keyExtractor = function (_, index) {\n      return index.toString();\n    };\n\n    _this.renderWeekDaysNames = memoize(function (weekDaysNames) {\n      return weekDaysNames.map(function (day, index) {\n        return React.createElement(Text, {\n          allowFontScaling: false,\n          key: index,\n          style: _this.style.dayHeader,\n          numberOfLines: 1,\n          accessibilityLabel: '',\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 51\n          }\n        }, day);\n      });\n    });\n    return _this;\n  }\n\n  _createClass(WeekCalendar, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var context = this.props.context;\n      var _this$presenter = this.presenter,\n          shouldComponentUpdate = _this$presenter.shouldComponentUpdate,\n          getDatesArray = _this$presenter.getDatesArray,\n          scrollToIndex = _this$presenter.scrollToIndex;\n\n      if (shouldComponentUpdate(context, prevProps.context)) {\n        this.setState({\n          items: getDatesArray(this.props)\n        });\n        scrollToIndex(false);\n      }\n    }\n  }, {\n    key: \"containerWidth\",\n    get: function get() {\n      return this.props.calendarWidth || commons.screenWidth;\n    }\n  }, {\n    key: \"getDatesArray\",\n    value: function getDatesArray() {\n      var array = [];\n\n      for (var index = -NUMBER_OF_PAGES; index <= NUMBER_OF_PAGES; index++) {\n        var d = this.getDate(index);\n        array.push(d);\n      }\n\n      return array;\n    }\n  }, {\n    key: \"getDate\",\n    value: function getDate(weekIndex) {\n      var _this$props = this.props,\n          current = _this$props.current,\n          context = _this$props.context,\n          _this$props$firstDay = _this$props.firstDay,\n          firstDay = _this$props$firstDay === void 0 ? 0 : _this$props$firstDay;\n      var d = new XDate(current || context.date);\n      var dayOfTheWeek = d.getDay();\n\n      if (dayOfTheWeek < firstDay && firstDay > 0) {\n        dayOfTheWeek = 7 + dayOfTheWeek;\n      }\n\n      var dd = weekIndex === 0 ? d : d.addDays(firstDay - dayOfTheWeek);\n      var newDate = dd.addWeeks(weekIndex);\n      return toMarkingFormat(newDate);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          allowShadow = _this$props2.allowShadow,\n          firstDay = _this$props2.firstDay,\n          hideDayNames = _this$props2.hideDayNames,\n          current = _this$props2.current,\n          context = _this$props2.context;\n      var items = this.state.items;\n      var weekDaysNames = weekDayNames(firstDay);\n      var extraData = Map({\n        current: current,\n        date: context.date,\n        firstDay: firstDay\n      });\n      return React.createElement(View, {\n        testID: this.props.testID,\n        style: [allowShadow && this.style.containerShadow, !hideDayNames && this.style.containerWrapper],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }\n      }, !hideDayNames && React.createElement(View, {\n        style: [this.style.week, this.style.weekCalendar],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 28\n        }\n      }, this.renderWeekDaysNames(weekDaysNames)), React.createElement(FlatList, {\n        ref: this.presenter.list,\n        data: items,\n        extraData: extraData,\n        style: this.style.container,\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        pagingEnabled: true,\n        scrollEnabled: true,\n        renderItem: this.renderItem,\n        keyExtractor: this.keyExtractor,\n        initialScrollIndex: NUMBER_OF_PAGES,\n        getItemLayout: this.getItemLayout,\n        onScroll: this.onScroll,\n        onMomentumScrollEnd: this.onMomentumScrollEnd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return WeekCalendar;\n}(Component);\n\nWeekCalendar.displayName = 'WeekCalendar';\nWeekCalendar.propTypes = _objectSpread(_objectSpread({}, CalendarList.propTypes), {}, {\n  current: PropTypes.any,\n  allowShadow: PropTypes.bool,\n  hideDayNames: PropTypes.bool\n});\nWeekCalendar.defaultProps = {\n  firstDay: 0,\n  allowShadow: true\n};\nexport default asCalendarConsumer(WeekCalendar);","map":{"version":3,"sources":["C:/Users/adlai/Desktop/IngProc/CimaHealth/node_modules/react-native-calendars/src/expandableCalendar/WeekCalendar/index.js"],"names":["memoize","PropTypes","XDate","Map","React","Component","extractComponentProps","weekDayNames","toMarkingFormat","styleConstructor","asCalendarConsumer","CalendarList","Week","Presenter","commons","require","NUMBER_OF_PAGES","applyAndroidRtlFix","isAndroid","isRTL","WeekCalendar","style","props","theme","presenter","page","firstAndroidRTLScrollIgnored","state","items","getDatesArray","getWeekStyle","width","onDayPress","value","context","onScroll","event","x","nativeEvent","contentOffset","containerWidth","updateState","newData","newPage","setState","onMomentumScrollEnd","updateItems","setTimeout","renderItem","item","markedDates","firstDay","others","isSameWeek","date","currentContext","undefined","getItemLayout","_","index","length","offset","keyExtractor","toString","renderWeekDaysNames","weekDaysNames","map","day","dayHeader","prevProps","shouldComponentUpdate","scrollToIndex","calendarWidth","screenWidth","array","d","getDate","push","weekIndex","current","dayOfTheWeek","getDay","dd","addDays","newDate","addWeeks","allowShadow","hideDayNames","extraData","testID","containerShadow","containerWrapper","week","weekCalendar","list","container","displayName","propTypes","any","bool","defaultProps"],"mappings":"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","sourcesContent":["import memoize from 'memoize-one';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport { Map } from 'immutable';\nimport React, { Component } from 'react';\nimport { FlatList, View, Text } from 'react-native';\n// @ts-expect-error\nimport { extractComponentProps } from '../../component-updater';\n// @ts-expect-error\nimport { weekDayNames } from '../../dateutils';\n// @ts-expect-error\nimport { toMarkingFormat } from '../../interface';\nimport styleConstructor from '../style';\nimport asCalendarConsumer from '../asCalendarConsumer';\nimport CalendarList from '../../calendar-list';\nimport Week from '../week';\nimport Presenter from './presenter';\nconst commons = require('../commons');\nconst NUMBER_OF_PAGES = 2; // must be a positive number\nconst applyAndroidRtlFix = commons.isAndroid && commons.isRTL;\n/**\n * @description: Week calendar component\n * @note: Should be wrapped with 'CalendarProvider'\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/expandableCalendar.js\n */\nclass WeekCalendar extends Component {\n    static displayName = 'WeekCalendar';\n    static propTypes = {\n        ...CalendarList.propTypes,\n        /** the current date */\n        current: PropTypes.any,\n        /** whether to have shadow/elevation for the calendar */\n        allowShadow: PropTypes.bool,\n        /** whether to hide the names of the week days */\n        hideDayNames: PropTypes.bool\n    };\n    static defaultProps = {\n        firstDay: 0,\n        allowShadow: true\n    };\n    style = styleConstructor(this.props.theme);\n    presenter = new Presenter();\n    page = NUMBER_OF_PAGES;\n    // On Android+RTL there's an initial scroll that cause issues\n    firstAndroidRTLScrollIgnored = !applyAndroidRtlFix;\n    state = {\n        items: this.presenter.getDatesArray(this.props)\n    };\n    componentDidUpdate(prevProps) {\n        const { context } = this.props;\n        const { shouldComponentUpdate, getDatesArray, scrollToIndex } = this.presenter;\n        if (shouldComponentUpdate(context, prevProps.context)) {\n            this.setState({ items: getDatesArray(this.props) });\n            scrollToIndex(false);\n        }\n    }\n    get containerWidth() {\n        return this.props.calendarWidth || commons.screenWidth;\n    }\n    getDatesArray() {\n        const array = [];\n        for (let index = -NUMBER_OF_PAGES; index <= NUMBER_OF_PAGES; index++) {\n            const d = this.getDate(index);\n            array.push(d);\n        }\n        return array;\n    }\n    getDate(weekIndex) {\n        const { current, context, firstDay = 0 } = this.props;\n        const d = new XDate(current || context.date);\n        // get the first day of the week as date (for the on scroll mark)\n        let dayOfTheWeek = d.getDay();\n        if (dayOfTheWeek < firstDay && firstDay > 0) {\n            dayOfTheWeek = 7 + dayOfTheWeek;\n        }\n        // leave the current date in the visible week as is\n        const dd = weekIndex === 0 ? d : d.addDays(firstDay - dayOfTheWeek);\n        const newDate = dd.addWeeks(weekIndex);\n        return toMarkingFormat(newDate);\n    }\n    getWeekStyle = memoize((width, style) => {\n        return [{ width }, style];\n    });\n    onDayPress = (value) => {\n        this.presenter.onDayPress(this.props.context, value);\n    };\n    onScroll = (event) => {\n        const x = event.nativeEvent.contentOffset.x;\n        const { onScroll } = this.presenter;\n        const { context } = this.props;\n        const { items } = this.state;\n        const { containerWidth, page } = this;\n        const updateState = (newData, newPage) => {\n            this.page = newPage;\n            this.setState({ items: [...newData] });\n        };\n        onScroll({ context, updateState, x, page, items, width: containerWidth });\n    };\n    onMomentumScrollEnd = () => {\n        const { items } = this.state;\n        const { onMomentumScrollEnd } = this.presenter;\n        const updateItems = (items) => {\n            setTimeout(() => {\n                this.setState({ items: [...items] });\n            }, 100);\n        };\n        onMomentumScrollEnd({ items, props: this.props, page: this.page, updateItems });\n    };\n    renderItem = ({ item }) => {\n        const { style, onDayPress, markedDates, firstDay, ...others } = extractComponentProps(Week, this.props);\n        const { context } = this.props;\n        const isSameWeek = this.presenter.isSameWeek(item, context.date, firstDay);\n        const currentContext = isSameWeek ? context : undefined;\n        return (<Week {...others} key={item} current={item} firstDay={firstDay} style={this.getWeekStyle(this.containerWidth, style)} markedDates={markedDates} onDayPress={onDayPress || this.onDayPress} context={currentContext}/>);\n    };\n    getItemLayout = (_, index) => {\n        return {\n            length: this.containerWidth,\n            offset: this.containerWidth * index,\n            index\n        };\n    };\n    keyExtractor = (_, index) => index.toString();\n    renderWeekDaysNames = memoize(weekDaysNames => {\n        return weekDaysNames.map((day, index) => (<Text allowFontScaling={false} key={index} style={this.style.dayHeader} numberOfLines={1} accessibilityLabel={''}>\n        {day}\n      </Text>));\n    });\n    render() {\n        const { allowShadow, firstDay, hideDayNames, current, context } = this.props;\n        const { items } = this.state;\n        const weekDaysNames = weekDayNames(firstDay);\n        const extraData = Map({\n            current,\n            date: context.date,\n            firstDay\n        });\n        return (<View testID={this.props.testID} style={[allowShadow && this.style.containerShadow, !hideDayNames && this.style.containerWrapper]}>\n        {!hideDayNames && (<View style={[this.style.week, this.style.weekCalendar]}>\n            {/* {this.props.weekNumbers && <Text allowFontScaling={false} style={this.style.dayHeader}></Text>} */}\n            {this.renderWeekDaysNames(weekDaysNames)}\n          </View>)}\n        <FlatList ref={this.presenter.list} data={items} extraData={extraData} style={this.style.container} horizontal showsHorizontalScrollIndicator={false} pagingEnabled scrollEnabled renderItem={this.renderItem} keyExtractor={this.keyExtractor} initialScrollIndex={NUMBER_OF_PAGES} getItemLayout={this.getItemLayout} onScroll={this.onScroll} onMomentumScrollEnd={this.onMomentumScrollEnd}/>\n      </View>);\n    }\n}\nexport default asCalendarConsumer(WeekCalendar);\n"]},"metadata":{},"sourceType":"module"}