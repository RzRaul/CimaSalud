{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\adlai\\\\Desktop\\\\IngProc\\\\CimaHealth\\\\App.js\";\n\nimport React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { AuthContext } from \"./utils/AuthContext\";\nimport { loginReducer, initialState } from \"./utils/authReducer\";\nimport * as UserFuncs from \"./services/userFetchs\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport SignupScreen from \"./screens/SignupScreen\";\nimport GoalScreen from \"./screens/GoalScreen\";\nimport FoodScreen from \"./screens/FoodScreen\";\nimport CommunityScreen from \"./screens/CommunityScreen\";\nimport MoreScreen from \"./screens/MoreScreen\";\nimport SplashScreen from \"./screens/SplashScreen\";\nvar RootStack = createNativeStackNavigator();\nvar LogStack = createNativeStackNavigator();\nvar Tabs = createBottomTabNavigator();\n\nvar RootStackScreen = function RootStackScreen(_ref) {\n  var userToken = _ref.userToken;\n  return React.createElement(RootStack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, !userToken ? React.createElement(RootStack.Screen, {\n    name: \"Auth\",\n    component: LogScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }) : React.createElement(RootStack.Screen, {\n    name: \"App\",\n    component: TabsScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar LogScreen = function LogScreen() {\n  return React.createElement(LogStack.Navigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }\n  }, React.createElement(LogStack.Screen, {\n    name: \"Login\",\n    component: LoginScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }), React.createElement(LogStack.Screen, {\n    name: \"SignUp\",\n    component: SignupScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar TabsScreen = function TabsScreen() {\n  return React.createElement(Tabs.Navigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }\n  }, React.createElement(Tabs.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }), React.createElement(Tabs.Screen, {\n    name: \"Food\",\n    component: FoodScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }), React.createElement(Tabs.Screen, {\n    name: \"Goals\",\n    component: GoalScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }), React.createElement(Tabs.Screen, {\n    name: \"Community\",\n    component: CommunityScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }), React.createElement(Tabs.Screen, {\n    name: \"More\",\n    component: MoreScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }));\n};\n\nfunction App() {\n  var _React$useReducer = React.useReducer(loginReducer, initialState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      loginState = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var globalContext = React.useMemo(function () {\n    return {\n      signIn: function signIn(userMail, userPassword) {\n        var userToken;\n        var user;\n\n        if (userMail && userPassword) {\n          userToken = UserFuncs.login(userMail, userPassword);\n          user = UserFuncs.getUserInfo(userToken);\n        }\n\n        dispatch({\n          type: 'login',\n          userMail: userMail,\n          userName: user.userName,\n          userToken: userToken\n        });\n      },\n      signOut: function signOut() {\n        dispatch({\n          type: 'logout'\n        });\n      },\n      signUp: function signUp(userName, userMail, userPassword) {\n        var userToken = UserFuncs.signup(userMail, userPassword, userName);\n        user = UserFuncs.getUserInfo(userToken);\n        dispatch({\n          type: 'signup',\n          userMail: user.email,\n          userName: user.name,\n          token: usertoken\n        });\n      },\n      getState: function getState() {\n        return loginState;\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    setTimeout(function () {\n      dispatch({\n        type: 'signup',\n        token: null\n      });\n    }, 1000);\n  }, []);\n\n  if (loginState.isLoading) {\n    return React.createElement(SplashScreen, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    });\n  }\n\n  return React.createElement(AuthContext.Provider, {\n    value: globalContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, React.createElement(RootStackScreen, {\n    userToken: loginState.userToken,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  })));\n}\n\n;\nexport default App;","map":{"version":3,"sources":["C:/Users/adlai/Desktop/IngProc/CimaHealth/App.js"],"names":["React","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","createDrawerNavigator","AuthContext","loginReducer","initialState","UserFuncs","HomeScreen","LoginScreen","SignupScreen","GoalScreen","FoodScreen","CommunityScreen","MoreScreen","SplashScreen","RootStack","LogStack","Tabs","RootStackScreen","userToken","headerShown","LogScreen","TabsScreen","App","useReducer","loginState","dispatch","globalContext","useMemo","signIn","userMail","userPassword","user","login","getUserInfo","type","userName","signOut","signUp","signup","email","name","token","usertoken","getState","useEffect","setTimeout","isLoading"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport {createBottomTabNavigator} from \"@react-navigation/bottom-tabs\";\r\nimport {createDrawerNavigator} from \"@react-navigation/drawer\";\r\nimport {AuthContext} from \"./utils/AuthContext\";\r\nimport { loginReducer, initialState } from \"./utils/authReducer\";\r\nimport * as UserFuncs from \"./services/userFetchs\"\r\n\r\n\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport SignupScreen from \"./screens/SignupScreen\";\r\nimport GoalScreen from \"./screens/GoalScreen\";\r\nimport FoodScreen from \"./screens/FoodScreen\";\r\nimport CommunityScreen from \"./screens/CommunityScreen\";\r\nimport MoreScreen from \"./screens/MoreScreen\";\r\nimport SplashScreen from \"./screens/SplashScreen\";\r\n\r\nconst RootStack = createNativeStackNavigator();\r\nconst LogStack = createNativeStackNavigator();\r\nconst Tabs = createBottomTabNavigator();\r\n\r\nconst RootStackScreen = ({userToken})=>(\r\n    <RootStack.Navigator screenOptions={{headerShown:false}}>\r\n      {!userToken?(\r\n        <RootStack.Screen name=\"Auth\" component={LogScreen}/>\r\n      ):(\r\n        <RootStack.Screen name=\"App\" component={TabsScreen}/>\r\n      )}\r\n    </RootStack.Navigator>\r\n);\r\nconst LogScreen = () =>(\r\n  <LogStack.Navigator>\r\n    <LogStack.Screen  name= \"Login\" component={LoginScreen}/>\r\n    <LogStack.Screen  name= \"SignUp\" component={SignupScreen}/>\r\n  </LogStack.Navigator>\r\n);\r\n\r\n\r\nconst TabsScreen = () =>(\r\n  <Tabs.Navigator>\r\n    <Tabs.Screen name=\"Home\" component={HomeScreen} />\r\n    <Tabs.Screen name=\"Food\" component={FoodScreen} />\r\n    <Tabs.Screen name=\"Goals\" component={GoalScreen} />\r\n    <Tabs.Screen name=\"Community\" component={CommunityScreen} />\r\n    <Tabs.Screen name=\"More\" component={MoreScreen} />\r\n  </Tabs.Navigator>\r\n);\r\n\r\nfunction App() {\r\n  //const [isLoading, setIsLoading] = React.useState(true); //Custom Splash\r\n  //const [userToken, setuserToken] = React.useState(null);\r\n  const [loginState, dispatch] = React.useReducer(loginReducer,initialState);\r\n  //const [dataState, dispatch] = React.useReducer(loginReducer,initialState);\r\n\r\n  const globalContext = React.useMemo(()=>{\r\n    return {\r\n      signIn: (userMail,userPassword) => {\r\n      let userToken;\r\n      let user;\r\n      if(userMail && userPassword){\r\n       userToken = UserFuncs.login(userMail, userPassword);\r\n       user = UserFuncs.getUserInfo(userToken);\r\n      }\r\n      dispatch({type: 'login', userMail,userName: user.userName, userToken});\r\n      },\r\n      signOut: () => {\r\n        dispatch({type: 'logout'});\r\n      },\r\n      signUp: (userName, userMail, userPassword) => {\r\n        let userToken= UserFuncs.signup(userMail,userPassword, userName);\r\n        user = UserFuncs.getUserInfo(userToken);\r\n        dispatch({type: 'signup', userMail: user.email, userName: user.name, token: usertoken})\r\n      },\r\n      getState:()=>{\r\n        return loginState;\r\n      }\r\n      \r\n    };\r\n   }, []);\r\n  React.useEffect(()=>{\r\n    setTimeout(()=>{\r\n      //setIsLoading(false);\r\n      dispatch({type:'signup', token:null});\r\n    },1000);\r\n  },[]);\r\n\r\n  if(loginState.isLoading){\r\n    return (<SplashScreen/>);\r\n  }\r\n  \r\n  return (\r\n    <AuthContext.Provider value={globalContext}>\r\n      <NavigationContainer>\r\n        <RootStackScreen userToken={loginState.userToken} />\r\n      </NavigationContainer>\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default (App);\r\n"]},"metadata":{},"sourceType":"module"}