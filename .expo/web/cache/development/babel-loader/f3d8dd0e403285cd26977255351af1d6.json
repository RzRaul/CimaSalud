{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\adlai\\\\Desktop\\\\IngProc\\\\CimaHealth\\\\node_modules\\\\react-native-calendars\\\\src\\\\expandableCalendar\\\\Context\\\\Provider.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { toMarkingFormat } from \"../../interface\";\nimport styleConstructor from \"../style\";\nimport CalendarContext from '.';\nimport Presenter from \"./Presenter\";\n\nvar commons = require(\"../commons\");\n\nvar updateSources = commons.UpdateSources;\nvar TOP_POSITION = 65;\n\nvar CalendarProvider = function (_Component) {\n  _inherits(CalendarProvider, _Component);\n\n  var _super = _createSuper(CalendarProvider);\n\n  function CalendarProvider() {\n    var _this;\n\n    _classCallCheck(this, CalendarProvider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.style = styleConstructor(_this.props.theme);\n    _this.presenter = new Presenter();\n    _this.state = {\n      prevDate: _this.props.date || toMarkingFormat(new XDate()),\n      date: _this.props.date || toMarkingFormat(new XDate()),\n      updateSource: updateSources.CALENDAR_INIT,\n      buttonY: new Animated.Value(_this.props.todayBottomMargin ? -_this.props.todayBottomMargin : -TOP_POSITION),\n      buttonIcon: _this.presenter.getButtonIcon(_this.props.date, _this.props.showTodayButton),\n      disabled: false,\n      opacity: new Animated.Value(1)\n    };\n\n    _this.getProviderContextValue = function () {\n      return {\n        setDate: _this.setDate,\n        date: _this.state.date,\n        prevDate: _this.state.prevDate,\n        updateSource: _this.state.updateSource,\n        setDisabled: _this.setDisabled\n      };\n    };\n\n    _this.setDate = function (date, updateSource) {\n      var setDate = _this.presenter.setDate;\n\n      var updateState = function updateState(buttonIcon) {\n        _this.setState({\n          date: date,\n          prevDate: _this.state.date,\n          updateSource: updateSource,\n          buttonIcon: buttonIcon\n        }, function () {\n          _this.animateTodayButton(date);\n        });\n      };\n\n      setDate(_this.props, date, _this.state.date, updateState, updateSource);\n    };\n\n    _this.setDisabled = function (disabled) {\n      var setDisabled = _this.presenter.setDisabled;\n      var _this$props$showToday = _this.props.showTodayButton,\n          showTodayButton = _this$props$showToday === void 0 ? false : _this$props$showToday;\n\n      var updateState = function updateState(disabled) {\n        _this.setState({\n          disabled: disabled\n        });\n\n        _this.animateOpacity(disabled);\n      };\n\n      setDisabled(showTodayButton, disabled, _this.state.disabled, updateState);\n    };\n\n    _this.onTodayPress = function () {\n      var today = _this.presenter.getTodayDate();\n\n      _this.setDate(today, updateSources.TODAY_PRESS);\n    };\n\n    return _this;\n  }\n\n  _createClass(CalendarProvider, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.date !== this.props.date) {\n        this.setDate(this.props.date, updateSources.PROP_UPDATE);\n      }\n    }\n  }, {\n    key: \"animateTodayButton\",\n    value: function animateTodayButton(date) {\n      var _this$presenter = this.presenter,\n          shouldAnimateTodayButton = _this$presenter.shouldAnimateTodayButton,\n          getPositionAnimation = _this$presenter.getPositionAnimation;\n\n      if (shouldAnimateTodayButton(this.props)) {\n        var animationData = getPositionAnimation(date, this.props.todayBottomMargin);\n        Animated.spring(this.state.buttonY, _objectSpread({}, animationData)).start();\n      }\n    }\n  }, {\n    key: \"animateOpacity\",\n    value: function animateOpacity(disabled) {\n      var _this$presenter2 = this.presenter,\n          shouldAnimateOpacity = _this$presenter2.shouldAnimateOpacity,\n          getOpacityAnimation = _this$presenter2.getOpacityAnimation;\n\n      if (shouldAnimateOpacity(this.props)) {\n        var animationData = getOpacityAnimation(this.props, disabled);\n        Animated.timing(this.state.opacity, _objectSpread({}, animationData)).start();\n      }\n    }\n  }, {\n    key: \"renderTodayButton\",\n    value: function renderTodayButton() {\n      var _this$state = this.state,\n          disabled = _this$state.disabled,\n          opacity = _this$state.opacity,\n          buttonY = _this$state.buttonY,\n          buttonIcon = _this$state.buttonIcon;\n      var getTodayFormatted = this.presenter.getTodayFormatted;\n      var today = getTodayFormatted();\n      return React.createElement(Animated.View, {\n        style: [this.style.todayButtonContainer, {\n          transform: [{\n            translateY: buttonY\n          }]\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: [this.style.todayButton, this.props.todayButtonStyle],\n        onPress: this.onTodayPress,\n        disabled: disabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      }, React.createElement(Animated.Image, {\n        style: [this.style.todayButtonImage, {\n          opacity: opacity\n        }],\n        source: buttonIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }), React.createElement(Animated.Text, {\n        allowFontScaling: false,\n        style: [this.style.todayButtonText, {\n          opacity: opacity\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }, today)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CalendarContext.Provider, {\n        value: this.getProviderContextValue(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: [styles.container, this.props.style],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }, this.props.children), this.props.showTodayButton && this.renderTodayButton());\n    }\n  }]);\n\n  return CalendarProvider;\n}(Component);\n\nCalendarProvider.displayName = 'CalendarProvider';\nCalendarProvider.propTypes = {\n  date: PropTypes.any.isRequired,\n  onDateChanged: PropTypes.func,\n  onMonthChange: PropTypes.func,\n  showTodayButton: PropTypes.bool,\n  todayBottomMargin: PropTypes.number,\n  todayButtonStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  disabledOpacity: PropTypes.number\n};\nexport default CalendarProvider;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/adlai/Desktop/IngProc/CimaHealth/node_modules/react-native-calendars/src/expandableCalendar/Context/Provider.js"],"names":["PropTypes","XDate","React","Component","toMarkingFormat","styleConstructor","CalendarContext","Presenter","commons","require","updateSources","UpdateSources","TOP_POSITION","CalendarProvider","style","props","theme","presenter","state","prevDate","date","updateSource","CALENDAR_INIT","buttonY","Animated","Value","todayBottomMargin","buttonIcon","getButtonIcon","showTodayButton","disabled","opacity","getProviderContextValue","setDate","setDisabled","updateState","setState","animateTodayButton","animateOpacity","onTodayPress","today","getTodayDate","TODAY_PRESS","prevProps","PROP_UPDATE","shouldAnimateTodayButton","getPositionAnimation","animationData","spring","start","shouldAnimateOpacity","getOpacityAnimation","timing","getTodayFormatted","todayButtonContainer","transform","translateY","todayButton","todayButtonStyle","todayButtonImage","todayButtonText","styles","container","children","renderTodayButton","displayName","propTypes","any","isRequired","onDateChanged","func","onMonthChange","bool","number","oneOfType","object","array","disabledOpacity","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Component } from 'react';\nimport { StyleSheet, Animated, TouchableOpacity, View } from 'react-native';\n// @ts-expect-error\nimport { toMarkingFormat } from '../../interface';\nimport styleConstructor from '../style';\nimport CalendarContext from '.';\nimport Presenter from './Presenter';\nconst commons = require('../commons');\nconst updateSources = commons.UpdateSources;\nconst TOP_POSITION = 65;\n/**\n * @description: Calendar context provider component\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/expandableCalendar.js\n */\nclass CalendarProvider extends Component {\n    static displayName = 'CalendarProvider';\n    static propTypes = {\n        /** Initial date in 'yyyy-MM-dd' format. Default = Date() */\n        date: PropTypes.any.isRequired,\n        /** Callback for date change event */\n        onDateChanged: PropTypes.func,\n        /** Callback for month change event */\n        onMonthChange: PropTypes.func,\n        /** Whether to show the today button */\n        showTodayButton: PropTypes.bool,\n        /** Today button's top position */\n        todayBottomMargin: PropTypes.number,\n        /** Today button's style */\n        todayButtonStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n        /** The opacity for the disabled today button (0-1) */\n        disabledOpacity: PropTypes.number\n    };\n    style = styleConstructor(this.props.theme);\n    presenter = new Presenter();\n    state = {\n        prevDate: this.props.date || toMarkingFormat(new XDate()),\n        date: this.props.date || toMarkingFormat(new XDate()),\n        updateSource: updateSources.CALENDAR_INIT,\n        buttonY: new Animated.Value(this.props.todayBottomMargin ? -this.props.todayBottomMargin : -TOP_POSITION),\n        buttonIcon: this.presenter.getButtonIcon(this.props.date, this.props.showTodayButton),\n        disabled: false,\n        opacity: new Animated.Value(1)\n    };\n    componentDidUpdate(prevProps) {\n        if (prevProps.date !== this.props.date) {\n            this.setDate(this.props.date, updateSources.PROP_UPDATE);\n        }\n    }\n    getProviderContextValue = () => {\n        return {\n            setDate: this.setDate,\n            date: this.state.date,\n            prevDate: this.state.prevDate,\n            updateSource: this.state.updateSource,\n            setDisabled: this.setDisabled\n        };\n    };\n    setDate = (date, updateSource) => {\n        const { setDate } = this.presenter;\n        const updateState = (buttonIcon) => {\n            this.setState({ date, prevDate: this.state.date, updateSource, buttonIcon }, () => {\n                this.animateTodayButton(date);\n            });\n        };\n        setDate(this.props, date, this.state.date, updateState, updateSource);\n    };\n    setDisabled = (disabled) => {\n        const { setDisabled } = this.presenter;\n        const { showTodayButton = false } = this.props;\n        const updateState = (disabled) => {\n            this.setState({ disabled });\n            this.animateOpacity(disabled);\n        };\n        setDisabled(showTodayButton, disabled, this.state.disabled, updateState);\n    };\n    animateTodayButton(date) {\n        const { shouldAnimateTodayButton, getPositionAnimation } = this.presenter;\n        if (shouldAnimateTodayButton(this.props)) {\n            const animationData = getPositionAnimation(date, this.props.todayBottomMargin);\n            Animated.spring(this.state.buttonY, {\n                ...animationData\n            }).start();\n        }\n    }\n    animateOpacity(disabled) {\n        const { shouldAnimateOpacity, getOpacityAnimation } = this.presenter;\n        if (shouldAnimateOpacity(this.props)) {\n            const animationData = getOpacityAnimation(this.props, disabled);\n            Animated.timing(this.state.opacity, {\n                ...animationData\n            }).start();\n        }\n    }\n    onTodayPress = () => {\n        const today = this.presenter.getTodayDate();\n        this.setDate(today, updateSources.TODAY_PRESS);\n    };\n    renderTodayButton() {\n        const { disabled, opacity, buttonY, buttonIcon } = this.state;\n        const { getTodayFormatted } = this.presenter;\n        const today = getTodayFormatted();\n        return (<Animated.View style={[this.style.todayButtonContainer, { transform: [{ translateY: buttonY }] }]}>\n        <TouchableOpacity style={[this.style.todayButton, this.props.todayButtonStyle]} onPress={this.onTodayPress} disabled={disabled}>\n          <Animated.Image style={[this.style.todayButtonImage, { opacity }]} source={buttonIcon}/>\n          <Animated.Text allowFontScaling={false} style={[this.style.todayButtonText, { opacity }]}>\n            {today}\n          </Animated.Text>\n        </TouchableOpacity>\n      </Animated.View>);\n    }\n    render() {\n        return (<CalendarContext.Provider value={this.getProviderContextValue()}>\n        <View style={[styles.container, this.props.style]}>{this.props.children}</View>\n        {this.props.showTodayButton && this.renderTodayButton()}\n      </CalendarContext.Provider>);\n    }\n}\nexport default CalendarProvider;\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1\n    }\n});\n"]},"metadata":{},"sourceType":"module"}