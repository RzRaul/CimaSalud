{"ast":null,"code":"var get = require('lodash/get');\n\nvar omit = require('lodash/omit');\n\nvar pickBy = require('lodash/pickBy');\n\nvar isEqual = require('lodash/isEqual');\n\nvar includes = require('lodash/includes');\n\nfunction shouldUpdate(a, b, paths) {\n  for (var i = 0; i < paths.length; i++) {\n    var equals = isEqual(get(a, paths[i]), get(b, paths[i]));\n\n    if (!equals) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction extractComponentProps(component, props, ignoreProps) {\n  var componentPropTypes = component.propTypes;\n\n  if (componentPropTypes) {\n    var keys = Object.keys(componentPropTypes);\n    var componentProps = omit(pickBy(props, function (_value, key) {\n      return includes(keys, key);\n    }), ignoreProps);\n    return componentProps;\n  }\n\n  return {};\n}\n\nmodule.exports = {\n  shouldUpdate: shouldUpdate,\n  extractComponentProps: extractComponentProps\n};","map":{"version":3,"sources":["C:/Users/adlai/Desktop/IngProc/CimaHealth/node_modules/react-native-calendars/src/component-updater.js"],"names":["get","require","omit","pickBy","isEqual","includes","shouldUpdate","a","b","paths","i","length","equals","extractComponentProps","component","props","ignoreProps","componentPropTypes","propTypes","keys","Object","componentProps","_value","key","module","exports"],"mappings":"AAAA,IAAMA,GAAG,GAAGC,OAAO,CAAC,YAAD,CAAnB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,aAAD,CAApB;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,eAAD,CAAtB;;AACA,IAAMG,OAAO,GAAGH,OAAO,CAAC,gBAAD,CAAvB;;AACA,IAAMI,QAAQ,GAAGJ,OAAO,CAAC,iBAAD,CAAxB;;AAEA,SAASK,YAAT,CAAsBC,CAAtB,EAAyBC,CAAzB,EAA4BC,KAA5B,EAAmC;AACjC,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,QAAME,MAAM,GAAGR,OAAO,CAACJ,GAAG,CAACO,CAAD,EAAIE,KAAK,CAACC,CAAD,CAAT,CAAJ,EAAmBV,GAAG,CAACQ,CAAD,EAAIC,KAAK,CAACC,CAAD,CAAT,CAAtB,CAAtB;;AACA,QAAI,CAACE,MAAL,EAAa;AACX,aAAO,IAAP;AACD;AACF;;AACD,SAAO,KAAP;AACD;;AAED,SAASC,qBAAT,CAA+BC,SAA/B,EAA0CC,KAA1C,EAAiDC,WAAjD,EAA8D;AAC5D,MAAMC,kBAAkB,GAAGH,SAAS,CAACI,SAArC;;AACA,MAAID,kBAAJ,EAAwB;AACtB,QAAME,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,kBAAZ,CAAb;AACA,QAAMI,cAAc,GAAGnB,IAAI,CACzBC,MAAM,CAACY,KAAD,EAAQ,UAACO,MAAD,EAASC,GAAT;AAAA,aAAiBlB,QAAQ,CAACc,IAAD,EAAOI,GAAP,CAAzB;AAAA,KAAR,CADmB,EAEzBP,WAFyB,CAA3B;AAIA,WAAOK,cAAP;AACD;;AACD,SAAO,EAAP;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiB;AACfnB,EAAAA,YAAY,EAAZA,YADe;AAEfO,EAAAA,qBAAqB,EAArBA;AAFe,CAAjB","sourcesContent":["const get = require('lodash/get');\nconst omit = require('lodash/omit');\nconst pickBy = require('lodash/pickBy');\nconst isEqual = require('lodash/isEqual');\nconst includes = require('lodash/includes');\n\nfunction shouldUpdate(a, b, paths) {\n  for (let i = 0; i < paths.length; i++) {\n    const equals = isEqual(get(a, paths[i]), get(b, paths[i]));\n    if (!equals) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction extractComponentProps(component, props, ignoreProps) {\n  const componentPropTypes = component.propTypes;\n  if (componentPropTypes) {\n    const keys = Object.keys(componentPropTypes);\n    const componentProps = omit(\n      pickBy(props, (_value, key) => includes(keys, key)),\n      ignoreProps\n    );\n    return componentProps;\n  }\n  return {};\n}\n\nmodule.exports = {\n  shouldUpdate,\n  extractComponentProps\n};\n"]},"metadata":{},"sourceType":"script"}